/*
 * This file is generated by jOOQ.
*/
package db.tables;


import db.Keys;
import db.Tweetsenser;
import db.tables.records.StatusRecord;

import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Status extends TableImpl<StatusRecord> {

    private static final long serialVersionUID = -832608705;

    /**
     * The reference instance of <code>tweetsenser.status</code>
     */
    public static final Status STATUS = new Status();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StatusRecord> getRecordType() {
        return StatusRecord.class;
    }

    /**
     * The column <code>tweetsenser.status.id</code>.
     */
    public final TableField<StatusRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>tweetsenser.status.tweet_id</code>.
     */
    public final TableField<StatusRecord, Integer> TWEET_ID = createField("tweet_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>tweetsenser.status.product</code>.
     */
    public final TableField<StatusRecord, String> PRODUCT = createField("product", org.jooq.impl.SQLDataType.VARCHAR.length(15), this, "");

    /**
     * The column <code>tweetsenser.status.sub_product</code>.
     */
    public final TableField<StatusRecord, String> SUB_PRODUCT = createField("sub_product", org.jooq.impl.SQLDataType.VARCHAR.length(15), this, "");

    /**
     * The column <code>tweetsenser.status.tweet_date</code>.
     */
    public final TableField<StatusRecord, Timestamp> TWEET_DATE = createField("tweet_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>tweetsenser.status.tweetmsg</code>.
     */
    public final TableField<StatusRecord, String> TWEETMSG = createField("tweetmsg", org.jooq.impl.SQLDataType.VARCHAR.length(250), this, "");

    /**
     * The column <code>tweetsenser.status.tweetsource</code>.
     */
    public final TableField<StatusRecord, String> TWEETSOURCE = createField("tweetsource", org.jooq.impl.SQLDataType.VARCHAR.length(15), this, "");

    /**
     * The column <code>tweetsenser.status.is_truncated</code>.
     */
    public final TableField<StatusRecord, Byte> IS_TRUNCATED = createField("is_truncated", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>tweetsenser.status.in_reply_to_status_id</code>.
     */
    public final TableField<StatusRecord, Integer> IN_REPLY_TO_STATUS_ID = createField("in_reply_to_status_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>tweetsenser.status.in_reply_to_user_id</code>.
     */
    public final TableField<StatusRecord, Integer> IN_REPLY_TO_USER_ID = createField("in_reply_to_user_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>tweetsenser.status.is_favorited</code>.
     */
    public final TableField<StatusRecord, Byte> IS_FAVORITED = createField("is_favorited", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>tweetsenser.status.is_retweeted</code>.
     */
    public final TableField<StatusRecord, Byte> IS_RETWEETED = createField("is_retweeted", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>tweetsenser.status.favorite_count</code>.
     */
    public final TableField<StatusRecord, Integer> FAVORITE_COUNT = createField("favorite_count", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>tweetsenser.status.in_reply_to_screen_name</code>.
     */
    public final TableField<StatusRecord, String> IN_REPLY_TO_SCREEN_NAME = createField("in_reply_to_screen_name", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "");

    /**
     * The column <code>tweetsenser.status.geo_location</code>.
     */
    public final TableField<StatusRecord, String> GEO_LOCATION = createField("geo_location", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

    /**
     * The column <code>tweetsenser.status.place</code>.
     */
    public final TableField<StatusRecord, String> PLACE = createField("place", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

    /**
     * The column <code>tweetsenser.status.retweet_count</code>.
     */
    public final TableField<StatusRecord, Integer> RETWEET_COUNT = createField("retweet_count", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>tweetsenser.status.is_possibly_sensitive</code>.
     */
    public final TableField<StatusRecord, Byte> IS_POSSIBLY_SENSITIVE = createField("is_possibly_sensitive", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>tweetsenser.status.iso_language_code</code>.
     */
    public final TableField<StatusRecord, Byte> ISO_LANGUAGE_CODE = createField("iso_language_code", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>tweetsenser.status.lang</code>.
     */
    public final TableField<StatusRecord, String> LANG = createField("lang", org.jooq.impl.SQLDataType.VARCHAR.length(10), this, "");

    /**
     * The column <code>tweetsenser.status.retweeted_status</code>.
     */
    public final TableField<StatusRecord, Byte> RETWEETED_STATUS = createField("retweeted_status", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>tweetsenser.status.hashtag_entities</code>.
     */
    public final TableField<StatusRecord, String> HASHTAG_ENTITIES = createField("hashtag_entities", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

    /**
     * The column <code>tweetsenser.status.current_user_retweet_id</code>.
     */
    public final TableField<StatusRecord, Integer> CURRENT_USER_RETWEET_ID = createField("current_user_retweet_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>tweetsenser.status.user_id</code>.
     */
    public final TableField<StatusRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>tweetsenser.status.user_name</code>.
     */
    public final TableField<StatusRecord, String> USER_NAME = createField("user_name", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "");

    /**
     * The column <code>tweetsenser.status.screen_name</code>.
     */
    public final TableField<StatusRecord, String> SCREEN_NAME = createField("screen_name", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "");

    /**
     * The column <code>tweetsenser.status.user_location</code>.
     */
    public final TableField<StatusRecord, String> USER_LOCATION = createField("user_location", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

    /**
     * The column <code>tweetsenser.status.user_description</code>.
     */
    public final TableField<StatusRecord, String> USER_DESCRIPTION = createField("user_description", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "");

    /**
     * The column <code>tweetsenser.status.is_contributors_enabled</code>.
     */
    public final TableField<StatusRecord, Byte> IS_CONTRIBUTORS_ENABLED = createField("is_contributors_enabled", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>tweetsenser.status.profile_image_url</code>.
     */
    public final TableField<StatusRecord, String> PROFILE_IMAGE_URL = createField("profile_image_url", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>tweetsenser.status.profile_image_url_http</code>.
     */
    public final TableField<StatusRecord, String> PROFILE_IMAGE_URL_HTTP = createField("profile_image_url_http", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>tweetsenser.status.url</code>.
     */
    public final TableField<StatusRecord, String> URL = createField("url", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>tweetsenser.status.is_protected</code>.
     */
    public final TableField<StatusRecord, Byte> IS_PROTECTED = createField("is_protected", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>tweetsenser.status.followers_count</code>.
     */
    public final TableField<StatusRecord, Integer> FOLLOWERS_COUNT = createField("followers_count", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>tweetsenser.status.twitter_status</code>.
     */
    public final TableField<StatusRecord, Byte> TWITTER_STATUS = createField("twitter_status", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>tweetsenser.status.profile_use_background_image</code>.
     */
    public final TableField<StatusRecord, Byte> PROFILE_USE_BACKGROUND_IMAGE = createField("profile_use_background_image", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>tweetsenser.status.friends_count</code>.
     */
    public final TableField<StatusRecord, Integer> FRIENDS_COUNT = createField("friends_count", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>tweetsenser.status.created_at</code>.
     */
    public final TableField<StatusRecord, Date> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>tweetsenser.status.favourites_count</code>.
     */
    public final TableField<StatusRecord, Integer> FAVOURITES_COUNT = createField("favourites_count", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>tweetsenser.status.utc_offset</code>.
     */
    public final TableField<StatusRecord, Integer> UTC_OFFSET = createField("utc_offset", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>tweetsenser.status.time_zone</code>.
     */
    public final TableField<StatusRecord, String> TIME_ZONE = createField("time_zone", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

    /**
     * The column <code>tweetsenser.status.statuses_count</code>.
     */
    public final TableField<StatusRecord, Integer> STATUSES_COUNT = createField("statuses_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>tweetsenser.status.is_geo_enabled</code>.
     */
    public final TableField<StatusRecord, Byte> IS_GEO_ENABLED = createField("is_geo_enabled", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>tweetsenser.status.is_verified</code>.
     */
    public final TableField<StatusRecord, Byte> IS_VERIFIED = createField("is_verified", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>tweetsenser.status.translator</code>.
     */
    public final TableField<StatusRecord, Byte> TRANSLATOR = createField("translator", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>tweetsenser.status.listed_count</code>.
     */
    public final TableField<StatusRecord, Integer> LISTED_COUNT = createField("listed_count", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>tweetsenser.status.is_follow_request_sent</code>.
     */
    public final TableField<StatusRecord, Byte> IS_FOLLOW_REQUEST_SENT = createField("is_follow_request_sent", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * Create a <code>tweetsenser.status</code> table reference
     */
    public Status() {
        this("status", null);
    }

    /**
     * Create an aliased <code>tweetsenser.status</code> table reference
     */
    public Status(String alias) {
        this(alias, STATUS);
    }

    private Status(String alias, Table<StatusRecord> aliased) {
        this(alias, aliased, null);
    }

    private Status(String alias, Table<StatusRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Tweetsenser.TWEETSENSER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<StatusRecord> getPrimaryKey() {
        return Keys.KEY_STATUS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StatusRecord>> getKeys() {
        return Arrays.<UniqueKey<StatusRecord>>asList(Keys.KEY_STATUS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Status as(String alias) {
        return new Status(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Status rename(String name) {
        return new Status(name, null);
    }
}
